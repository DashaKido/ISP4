import random

from django.core.management.base import BaseCommand
from django.conf import settings
from logging import getLogger
from telegram.ext import MessageHandler
from telegram.ext import CallbackContext
from telegram.ext import CommandHandler
from telegram.ext import CallbackQueryHandler
from telegram.ext import Filters
from telegram.ext import Updater
from telegram.utils.request import Request
from .buttons import *
from telegram_bot.models import Message
from telegram_bot.models import Profile

logger = getLogger(__name__)


def log_errors(f):
    """–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —Å–æ–±—ã—Ç–∏–π –æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–∞"""

    def inner(*args, **kwargs):
        try:
            logger.info(f"–û–±—Ä–∞—â–µ–Ω–∏–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é {f.__name__}")
            return f(*args, **kwargs)
        except Exception:
            logger.exception(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ {f.__name__}")
            raise

    return inner


@log_errors
def do_echo(update: Update, context: CallbackContext):
    chat_id = update.message.chat_id
    text = update.message.text
    if text == BUTTON1_HELP:
        return do_help(update=update, context=context)
    elif text == BUTTON2_COUNT:
        return do_count(update=update, context=context)
    elif text == BUTTON3_TIMER:
        return do_timer(update=update, context=context)
    elif text == BUTTON4_QUOTE:
        return do_quote(update=update, context=context)
    elif text == BUTTON5_SETTINGS:
        return do_settings(update=update, context=context)
    else:
        p, _ = Profile.objects.get_or_create(
            external_id=chat_id,
            defaults={
                'name': update.message.from_user.username,
            }
        )
        m = Message(
            profile=p,
            text=text,
        )
        m.save()
        reply_text1 = "–î–∞–∂–µ –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å."
        reply_text2 = "–û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ."
        reply_text3 = "–ú–æ–∂–µ—Ç –Ω–∞–ø–∏—à–µ—Ç–µ —á—Ç–æ-—Ç–æ –µ—â–µ?"
        reply_text4 = "–ü–æ—Å–ª–µ —Ç–∞–∫–æ–≥–æ –¥–∞–∂–µ –Ω–µ —Ö–æ—á–µ—Ç—Å—è —Å –≤–∞–º–∏ –≥–æ–≤–æ—Ä–∏—Ç—å."
        reply_text5 = "–°–∫—É—á–Ω–æ —Å –≤–∞–º–∏."
        reply_text6 = "–ê —Å –≤–∞–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ."
        reply_text7 = "–ß—Ç–æ?"
        reply_text8 = "–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ?"
        reply_text9 = "–ë—É–¥—É –∑–Ω–∞—Ç—å."
        reply_text10 = "–ï—Å–ª–∏ —á—Ç–æ, —Ç–æ —è –≤—Å–µ –∑–∞–ø–∏—Å—ã–≤–∞—é."
        reply_text11 = "–í—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫."
        seq = [reply_text1, reply_text2, reply_text3, reply_text4,
               reply_text5, reply_text6, reply_text7, reply_text8,
               reply_text9, reply_text10, reply_text11]
        reply_text = random.choice(seq)
        update.message.reply_text(
            text=reply_text,
        )


@log_errors
def do_settings(update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
        reply_markup=get_keyboard_settings1(),
    )


@log_errors
def do_timer(update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
        reply_markup=get_base_inline_keyboard_timer(),
    )


@log_errors
def do_quote(update: Update, context: CallbackContext):
    update.message.reply_text(
        text='–ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç, –Ω–æ —Å–∫–æ—Ä–æ —á—Ç–æ-—Ç–æ –±—É–¥–µ—Ç...',
    )


@log_errors
def do_count(update: Update, context: CallbackContext):
    chat_id = update.message.chat_id
    p, _ = Profile.objects.get_or_create(
        external_id=chat_id,
        defaults={
            'name': update.message.from_user.username,
        }
    )
    count = Message.objects.filter(profile=p).count()
    update.message.reply_text(
        text=f'–£ –≤–∞—Å {count} —Å–æ–æ–±—â–µ–Ω–∏–π',
    )


@log_errors
def do_start(update: Update, context: CallbackContext):
    name = update.message.from_user.first_name
    update.message.reply_text(
        text=f'–ü—Ä–∏–≤–µ—Ç {name}. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ç–≤–æ–∏—Ö –¥–µ–¥–ª–∞–π–Ω–æ–≤.',
        reply_markup=get_base_reply_keyboard(),
    )


@log_errors
def do_help(update: Update, context: CallbackContext):
    update.message.reply_text(
        text="""
–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º —Ç–≤–æ–∏—Ö –¥–µ–¥–ª–∞–π–Ω–æ–≤.
- –Ø –º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ö–æ—Ä–æ—à—É—é —Ç–∞–∫—Ç–∏–∫—É –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π —Å–¥–∞—á–∏ –ª—é–±–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –≤ —Å—Ä–æ–∫.
- –Ø –º–æ–≥—É –±—ã—Ç—å —Ç–∞–π–º–µ—Ä–æ–º –¥–ª—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä 45 –º–∏–Ω—É—Ç —Ä–∞–±–æ—Ç—ã/15 –º–∏–Ω—É—Ç –æ—Ç–¥—ã—Ö–∞).
- –¢–∞–∫ –∂–µ –º–æ–≥—É –ø–æ—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —ç—Ç–æ–º —á–∞—Ç–µ.
- –ï—Å–ª–∏ —Ç–µ–±–µ —Å—Ç–∞–ª–æ –≥—Ä—É—Å—Ç–Ω–æ, —Ç–æ —è –ø–æ–ø—Ä–æ–±—É—é –ø–æ–¥–±–æ–¥—Ä–∏—Ç—å —Ç–µ–±—è —Ü–∏—Ç–∞—Ç–æ–π.

–ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏ —á—Ç–æ-—Ç–æ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏, —á—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è üòâ.
        """,
        reply_markup=get_base_reply_keyboard(),
    )


class Command(BaseCommand):
    help = '–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç'

    def handle(self, *args, **options):
        # 1 -- –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        request = Request(
            connect_timeout=1.0,
            read_timeout=0.5,
        )
        bot = Bot(
            request=request,
            token=settings.TOKEN,
        )
        print(bot.get_me())
        # 2 -- –æ–±—Ä–∞–±–æ—Ç–∫–∏
        updater = Updater(
            bot=bot,
            use_context=True,
            request_kwargs=settings.REQUEST_KWARGS,
        )
        start_handler = CommandHandler('start', do_start)
        updater.dispatcher.add_handler(start_handler)
        count_handler = CommandHandler('count', do_count)
        updater.dispatcher.add_handler(count_handler)
        help_handler = CommandHandler('help', do_help)
        updater.dispatcher.add_handler(help_handler)
        timer_handler = CommandHandler('timer', do_timer)
        updater.dispatcher.add_handler(timer_handler)
        quote_handler = CommandHandler('quote', do_quote)
        updater.dispatcher.add_handler(quote_handler)
        settings_handler = CommandHandler('settings', do_settings)
        updater.dispatcher.add_handler(settings_handler)

        message_handler = MessageHandler(Filters.text, do_echo)
        updater.dispatcher.add_handler(message_handler)

        timer_button_handler = CallbackQueryHandler(callback=keyboard_callback_handler, pass_chat_data=True)
        updater.dispatcher.add_handler(timer_button_handler)
        settings_button_handler = CallbackQueryHandler(callback=keyboard_callback_handler, pass_chat_data=True)
        updater.dispatcher.add_handler(settings_button_handler)
        # 3 -- –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        updater.start_polling()
        updater.idle()
